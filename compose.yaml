services:
  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    networks:
      - app-network
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules

  api:
    container_name: api-service
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ./apps/api/Dockerfile
    ports:
      - 5000:5000
    networks:
      - app-network
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq

  chat:
    container_name: chat-service
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ./apps/chat/Dockerfile
    ports:
      - 5001:5001
    networks:
      - app-network
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - /var/lib/rabbitmq
    networks:
      - app-network

  mysql_db: 
    image: 'mysql:latest'
    restart: always
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - database-vol:/var/lib/mysql
    networks:
      - app-network
    
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql_db
    ports: 
      - "9001:80"
    depends_on:
      - mysql_db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  database-vol:
    external: true